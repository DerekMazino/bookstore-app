{"version":3,"sources":["components/ListaLibros.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InitialStateLibrary","titulo","ISBN","autor","reseña","valor","unidades","ListaLibros","useState","libros","setlibros","libraryData","setlibraryData","ChangesValues","property","value","data","JSON","parse","stringify","useEffect","axios","get","then","res","console","log","className","map","libro","index","onClick","delete","filter","e","deleteitem","editar","type","onChange","evt","target","post","datoslibros","findIndex","push","alert","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.044bda8a.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\ninterface library {\r\n    titulo: string, ISBN: string, autor: string, reseña: string, valor: string;\r\n    unidades: number;\r\n}\r\nconst InitialStateLibrary:library = {\r\n    titulo: \"\", ISBN: \"\", autor: \"\", reseña: \"\", valor: \"\",\r\n    unidades: 0\r\n}\r\nexport default function ListaLibros() {\r\n    const [libros, setlibros] = useState<library[]>([]);\r\n    const [libraryData, setlibraryData] = useState(InitialStateLibrary);\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/api/getlibros\").then((res) => {\r\n            console.log(res.data)\r\n            setlibros(res.data);\r\n        })\r\n    }, [])\r\n\r\n    function EnviarDatos() {\r\n        axios.post(`http://localhost:8080/api/agregarlibro?titulo=${libraryData.titulo}&ISBN=${libraryData.ISBN}&autor=${libraryData.autor}&resena=${libraryData.reseña}&valor=${libraryData.valor}&unidades=${libraryData.unidades}`)\r\n            .then((res) => {\r\n                var datoslibros = JSON.parse(JSON.stringify(libros));\r\n                var index = datoslibros.findIndex((e: any) => e.ISBN == libraryData.ISBN);\r\n                if (index == -1) {\r\n                    datoslibros.push(libraryData);\r\n                    alert(\"nuevo libro agregada\");\r\n                } else {\r\n                    datoslibros[index] = libraryData;\r\n                    alert(\"libro actulizado\");\r\n                }\r\n                setlibros(datoslibros);\r\n            });\r\n    }\r\n    function editar(libro: library) {\r\n        setlibraryData(libro);\r\n    }\r\n    function deleteitem(libro: library) {\r\n        axios.delete(`http://localhost:8080/api/deletelibro?ISBN=${libro.ISBN}`).then(res => {\r\n            setlibros(libros.filter(e => e != libro))\r\n        })\r\n    }\r\n    function ChangesValues(property: string, value: any) {\r\n        var data = JSON.parse(JSON.stringify(libraryData));\r\n        data[property] = value;\r\n        setlibraryData(data);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"container\">\r\n            {libros.map((libro, index) => {\r\n                return (<div className=\"card-container\" key={index}>\r\n                    <div className=\"card-title\">\r\n                        <div>\r\n                            <h3>{libro.titulo}</h3>\r\n                            <div className=\"name-container\">\r\n                                <p>{libro.autor}</p>\r\n                                <p>ISBN:{libro.ISBN}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"valor\">\r\n                            Precio: {libro.valor}\r\n                        </div>\r\n                        <div>\r\n                            Cantidad: {libro.unidades}\r\n                        </div>\r\n                        <button className=\"eliminar\" onClick={() => deleteitem(libro)}>X</button>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <p>Reseña</p>\r\n                        {libro.reseña}\r\n                        <button className=\"editar\" onClick={() => { editar(libro) }}>Editar</button>\r\n                    </div>\r\n                </div>);\r\n            })}\r\n        </div>\r\n        <div className=\"agregar-container\">\r\n            <div>\r\n                <label >ISBN</label>\r\n                <input type=\"text\" value={libraryData.ISBN}\r\n                    onChange={(evt) => { ChangesValues(\"ISBN\", evt.target.value) }} />\r\n            </div>\r\n            <div>\r\n                <label >titulo</label>\r\n                <input type=\"text\" value={libraryData.titulo}\r\n                    onChange={(evt) => { ChangesValues(\"Titulo\", evt.target.value) }} />\r\n            </div>\r\n            <div>\r\n                <label >Autor</label>\r\n                <input type=\"text\" value={libraryData.autor}\r\n                    onChange={(evt) => { ChangesValues(\"Autor\", evt.target.value) }} />\r\n            </div>\r\n            <div>\r\n                <label >Reseña</label>\r\n                <input type=\"text\" value={libraryData.reseña}\r\n                    onChange={(evt) => { ChangesValues(\"Reseña\", evt.target.value) }} />\r\n\r\n            </div>\r\n            <div>\r\n                <label >Valor</label>\r\n                <input type=\"number\" value={libraryData.valor}\r\n                    onChange={(evt) => { ChangesValues(\"Valor\", evt.target.value) }} />\r\n            </div>\r\n            <div>\r\n                <label >Unidades</label>\r\n                <input type=\"number\" value={libraryData.unidades}\r\n                    onChange={(evt) => { ChangesValues(\"Unidades\", evt.target.value) }} />\r\n            </div>\r\n            <button onClick={() => EnviarDatos()}>Enviar</button>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ListaLibros from './components/ListaLibros';\n\nfunction App() {\n  return (\n    <div className=\"content\">\n      <ListaLibros />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}